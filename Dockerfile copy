# `python-base` sets up all our shared environment variables
FROM python:3.9-slim as python-base

    # python
ENV PYTHONUNBUFFERED=1 \
    # prevents python creating .pyc files
    PYTHONDONTWRITEBYTECODE=1 \
    \
    # pip
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    \
    # poetry
    # https://python-poetry.org/docs/configuration/#using-environment-variables
    POETRY_VERSION=1.2.2 \
    # make poetry install to this location
    POETRY_HOME="/opt/poetry" \
    # make poetry create the virtual environment in the project's root
    # it gets named `.venv`
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    # do not ask any interactive question
    POETRY_NO_INTERACTION=1 \
    \
    # paths
    # this is where our requirements + virtual environment will live
    PYSETUP_PATH="/opt/pysetup" \
    VENV_PATH="/opt/pysetup/.venv"

# prepend poetry and venv to path
ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"

# `builder-base` stage is used to build deps + create our virtual environment
FROM python-base as builder-base
RUN apt-get update \
    && apt-get install --no-install-recommends -y \
        # deps for installing poetry
        curl \
        # deps for building python deps
        build-essential libpq-dev

# install poetry - respects $POETRY_VERSION & $POETRY_HOME
RUN curl -sSL https://install.python-poetry.org | python3 -

# copy project requirement files here to ensure they will be cached.
WORKDIR $PYSETUP_PATH
COPY poetry.lock pyproject.toml ./

# install runtime deps - uses $POETRY_VIRTUALENVS_IN_PROJECT internally
RUN poetry install --without dev
RUN poetry add "git+https://github.com/LDataCentric/db.git@library"


FROM python:3.9-slim

RUN apt-get update \
    && apt-get install --no-install-recommends -y libpq-dev

COPY --from=builder-base /opt/pysetup/.venv  /opt/.venv

WORKDIR /app

ENV PATH="/opt/.venv/bin:$PATH"

# COPY requirements.txt .

# RUN pip3 install -r requirements.txt
RUN python3 -m spacy download en_core_web_sm
# RUN python3 -m spacy download de_core_news_sm
# RUN python3 -m spacy download zh_core_web_sm
# RUN python3 -m spacy download da_core_news_sm
# RUN python3 -m spacy download nl_core_news_sm
# RUN python3 -m spacy download fr_core_news_sm
# RUN python3 -m spacy download el_core_news_sm
# RUN python3 -m spacy download it_core_news_sm
# RUN python3 -m spacy download ja_core_news_sm
# RUN python3 -m spacy download pl_core_news_sm
# RUN python3 -m spacy download pt_core_news_sm
# RUN python3 -m spacy download ru_core_news_sm
# RUN python3 -m spacy download es_core_news_sm
# RUN python3 -m spacy download xx_ent_wiki_sm


COPY / .

CMD [ "/usr/local/bin/uvicorn", "--host", "0.0.0.0", "--port", "80", "app:app" ]
